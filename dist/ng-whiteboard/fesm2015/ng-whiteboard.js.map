{"version":3,"file":"ng-whiteboard.js","sources":["ng://ng-whiteboard/lib/ng-whiteboard.service.ts","ng://ng-whiteboard/lib/ng-whiteboard.types.ts","ng://ng-whiteboard/lib/ng-whiteboard.component.ts","ng://ng-whiteboard/lib/ng-whiteboard.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgWhiteboardService {\r\n  // Observable string sources\r\n  private eraseSvgMethodCallSource = new Subject<any>();\r\n  private saveSvgMethodCallSource = new Subject<{ name: string; format: 'png' | 'jpeg' | 'svg' }>();\r\n  private undoSvgMethodCallSource = new Subject<any>();\r\n  private redoSvgMethodCallSource = new Subject<any>();\r\n  private addImageMethodCallSource = new Subject<string | ArrayBuffer>();\r\n\r\n  // Observable string streams\r\n  eraseSvgMethodCalled$ = this.eraseSvgMethodCallSource.asObservable();\r\n  saveSvgMethodCalled$ = this.saveSvgMethodCallSource.asObservable();\r\n  undoSvgMethodCalled$ = this.undoSvgMethodCallSource.asObservable();\r\n  redoSvgMethodCalled$ = this.redoSvgMethodCallSource.asObservable();\r\n  addImageMethodCalled$ = this.addImageMethodCallSource.asObservable();\r\n\r\n  // Service message commands\r\n  public erase(): void {\r\n    this.eraseSvgMethodCallSource.next();\r\n  }\r\n  public save(name: string = 'New image', format: 'png' | 'jpeg' | 'svg' = 'png'): void {\r\n    this.saveSvgMethodCallSource.next({ name, format });\r\n  }\r\n  public undo(): void {\r\n    this.undoSvgMethodCallSource.next();\r\n  }\r\n  public redo(): void {\r\n    this.redoSvgMethodCallSource.next();\r\n  }\r\n  public addImage(image: string | ArrayBuffer): void {\r\n    this.addImageMethodCallSource.next(image);\r\n  }\r\n}\r\n","export class WhiteboardOptions {\r\n  color = '#000000';\r\n  backgroundColor = '#ffffff';\r\n  size = '5px';\r\n  linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs' = 'round';\r\n  linecap: 'butt' | 'square' | 'round' = 'round';\r\n}\r\n\r\nexport interface ActionStack {\r\n  type: ActionType;\r\n  line?: SVGPathElement;\r\n  image?: SVGGElement;\r\n}\r\n\r\nexport enum ActionType {\r\n  Line,\r\n  Image\r\n}\r\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { NgWhiteboardService } from './ng-whiteboard.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { WhiteboardOptions, ActionStack, ActionType } from './ng-whiteboard.types';\r\nimport { ContainerElement, curveBasis, select, drag, Selection, line, event, mouse } from 'd3';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'ng-whiteboard-btc',\r\n  template: `\r\n    <svg #svgContainer [style.background-color]=\"this.backgroundColor || this.whiteboardOptions.backgroundColor\"></svg>\r\n  `,\r\n  styleUrls: ['ng-whiteboard.component.scss'],\r\n})\r\nexport class NgWhiteboardComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('svgContainer', { static: false }) private svgContainer: ElementRef<ContainerElement>;\r\n  @Input() whiteboardOptions: WhiteboardOptions = new WhiteboardOptions();\r\n  @Input() color: string;\r\n  @Input() backgroundColor: string;\r\n  @Input() size: string;\r\n  @Input() linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs';\r\n  @Input() linecap: 'butt' | 'square' | 'round';\r\n\r\n  @Output() init = new EventEmitter();\r\n  @Output() clear = new EventEmitter();\r\n  @Output() undo = new EventEmitter();\r\n  @Output() redo = new EventEmitter();\r\n  @Output() save: EventEmitter<any> = new EventEmitter<string | Blob | File>();\r\n  @Output() imageAdded = new EventEmitter();\r\n\r\n  private selection: Selection<any, unknown, null, undefined> = undefined;\r\n\r\n  private subscriptionList: Subscription[] = [];\r\n\r\n  private undoStack: ActionStack[] = [];\r\n  private redoStack: ActionStack[] = [];\r\n\r\n  constructor(private whiteboardService: NgWhiteboardService) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.subscriptionList.push(\r\n      this.whiteboardService.eraseSvgMethodCalled$.subscribe(() => this.eraseSvg(this.selection))\r\n    );\r\n\r\n    this.subscriptionList.push(\r\n      this.whiteboardService.saveSvgMethodCalled$.subscribe(({ name, format }) => this.saveSvg(name, format))\r\n    );\r\n    this.subscriptionList.push(this.whiteboardService.undoSvgMethodCalled$.subscribe(() => this.undoDraw()));\r\n    this.subscriptionList.push(this.whiteboardService.redoSvgMethodCalled$.subscribe(() => this.redoDraw()));\r\n    this.subscriptionList.push(this.whiteboardService.addImageMethodCalled$.subscribe((image) => this.addImage(image)));\r\n\r\n    this.selection = this.initSvg(this.svgContainer.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptionList.forEach((subscription) => this._unsubscribe(subscription));\r\n  }\r\n\r\n  private initSvg(selector: ContainerElement) {\r\n    const d3Line = line().curve(curveBasis);\r\n    const svg = select(selector).call(\r\n      drag()\r\n        .container(selector)\r\n        .subject(() => {\r\n          const p = [event.x, event.y];\r\n          return [p, p];\r\n        })\r\n        .on('start', () => {\r\n          const d = event.subject;\r\n          const active = svg\r\n            .append('path')\r\n            .datum(d)\r\n            .attr('class', 'line')\r\n            .attr(\r\n              'style',\r\n              `\r\n           fill: none;\r\n           stroke: ${this.color || this.whiteboardOptions.color};\r\n           stroke-width: ${this.size || this.whiteboardOptions.size};\r\n           stroke-linejoin: ${this.linejoin || this.whiteboardOptions.linejoin};\r\n           stroke-linecap: ${this.linecap || this.whiteboardOptions.linecap};\r\n           `\r\n            );\r\n          active.attr('d', d3Line);\r\n          event.on('drag', function () {\r\n            active.datum().push(mouse(this));\r\n            active.attr('d', d3Line);\r\n          });\r\n          event.on('end', () => {\r\n            active.attr('d', d3Line);\r\n            if (this.undoStack.length < 1) {\r\n              this.redoStack = [];\r\n            }\r\n            this.undoStack.push({ type: ActionType.Line, line: active.node() });\r\n          });\r\n        })\r\n    );\r\n    this.init.emit();\r\n    return svg;\r\n  }\r\n\r\n  private addImage(image: string | ArrayBuffer) {\r\n    this.drawImage(image);\r\n  }\r\n\r\n  private eraseSvg(svg: Selection<any, unknown, null, undefined>) {\r\n    svg.selectAll('*').remove();\r\n    this.undoStack = [];\r\n    this.redoStack = [];\r\n    this.clear.emit();\r\n  }\r\n\r\n  private saveSvg(name, format: 'png' | 'jpeg' | 'svg') {\r\n    const svgString = this.saveAsSvg(this.selection.clone(true).node());\r\n    if (format === 'svg') {\r\n      this.download('data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))), name);\r\n    } else {\r\n      this.svgString2Image(\r\n        svgString,\r\n        Number(this.selection.style('width').replace('px', '')),\r\n        Number(this.selection.style('height').replace('px', '')),\r\n        format,\r\n        (img) => {\r\n          this.download(img, name);\r\n        }\r\n      );\r\n    }\r\n\r\n    // this.save.emit();\r\n  }\r\n\r\n  private undoDraw() {\r\n    if (!this.undoStack.length) {\r\n      return;\r\n    }\r\n    this.redoStack.push(this.undoStack.pop());\r\n    this.selection.selectAll('.line').remove();\r\n    this.undoStack.forEach((action) => {\r\n      if (action.type === ActionType.Line) {\r\n        this.drawLine(action.line);\r\n      } else if (action.type === ActionType.Image) {\r\n        this.drawLine(action.image);\r\n      }\r\n    });\r\n    this.undo.emit();\r\n  }\r\n\r\n  private redoDraw() {\r\n    if (!this.redoStack.length) {\r\n      return;\r\n    }\r\n    this.undoStack.push(this.redoStack.pop());\r\n    this.selection.selectAll('.line').remove();\r\n    this.undoStack.forEach((action) => {\r\n      if (action.type === ActionType.Line) {\r\n        this.drawLine(action.line);\r\n      } else if (action.type === ActionType.Image) {\r\n        this.drawLine(action.image);\r\n      }\r\n    });\r\n    this.redo.emit();\r\n  }\r\n\r\n  private drawLine(pathNode: SVGPathElement | SVGGElement) {\r\n    this.selection.node().appendChild(pathNode);\r\n  }\r\n\r\n  private drawImage(image: string | ArrayBuffer) {\r\n    const group = this.selection\r\n      .append('g')\r\n      .data([{ x: 20, y: 20, r: 1, scale: 1 }])\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .attr('transform', 'translate(0,0)');\r\n\r\n    const tempImg = new Image();\r\n    tempImg.onload = () => {\r\n      const aspectRatio = tempImg.width / tempImg.height;\r\n      const height = Number(this.selection.style('height').replace('px', ''));\r\n      // tempImg.height > Number(this.selection.style('height').replace('px', ''))\r\n      //   ? Number(this.selection.style('height').replace('px', '')) - 40\r\n      //   : tempImg.height;\r\n      const width = Number(this.selection.style('width').replace('px', ''));\r\n      // height === Number(this.selection.style('height').replace('px', '')) - 40\r\n      //   ? (Number(this.selection.style('height').replace('px', '')) - 40) * aspectRatio\r\n      //   : tempImg.width;\r\n      group\r\n        .append('image')\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('height', height)\r\n        .attr('width', width)\r\n        .attr('preserveAspectRatio', 'none')\r\n        .attr('xlink:href', image.toString());\r\n\r\n      group\r\n        .append('rect')\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('width', 20)\r\n        .attr('height', 20)\r\n        .style('opacity', 0)\r\n        .attr('fill', (d) => {\r\n          return '#cccccc';\r\n        })\r\n        .call(\r\n          drag()\r\n            .subject(() => {\r\n              const p = [event.x, event.y];\r\n              return [p, p];\r\n            })\r\n            .on('start', () => {\r\n              event.on('drag', function (d) {\r\n                const cursor = select(this);\r\n                const cord = mouse(this);\r\n\r\n                d.x += cord[0] - Number(cursor.attr('width')) / 2;\r\n                d.y += cord[1] - Number(cursor.attr('height')) / 2;\r\n                select(this.parentNode).attr('transform', () => {\r\n                  return (\r\n                    'translate(' + [d.x, d.y] + '),rotate(' + 0 + ',160, 160),scale(' + d.scale + ',' + d.scale + ')'\r\n                  );\r\n                });\r\n              });\r\n            })\r\n        );\r\n      group\r\n        .on('mouseover', function () {\r\n          select(this).select('rect').style('opacity', 1.0);\r\n        })\r\n        .on('mouseout', function () {\r\n          select(this).select('rect').style('opacity', 0);\r\n        });\r\n      // this.undoStack.push({ type: ActionType.Image, image: group.node() });\r\n    };\r\n    tempImg.src = image.toString();\r\n  }\r\n\r\n  private _unsubscribe(subscription: Subscription): void {\r\n    if (subscription) {\r\n      subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private svgString2Image(\r\n    svgString: string,\r\n    width: number,\r\n    height: number,\r\n    format: string,\r\n    callback: (img: string) => void\r\n  ) {\r\n    // set default for format parameter\r\n    format = format || 'png';\r\n    // SVG data URL from SVG string\r\n    const svgData = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\r\n    // create canvas in memory(not in DOM)\r\n    const canvas = document.createElement('canvas');\r\n    // get canvas context for drawing on canvas\r\n    const context = canvas.getContext('2d');\r\n    // set canvas size\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    // create image in memory(not in DOM)\r\n    const image = new Image();\r\n    // later when image loads run this\r\n    image.onload = () => {\r\n      // async (happens later)\r\n      // clear canvas\r\n      context.clearRect(0, 0, width, height);\r\n      // draw image with SVG data to canvas\r\n      context.drawImage(image, 0, 0, width, height);\r\n      // snapshot canvas as png\r\n      const pngData = canvas.toDataURL('image/' + format);\r\n      // pass png data URL to callback\r\n      callback(pngData);\r\n    }; // end async\r\n    // start loading SVG data into in memory image\r\n    image.src = svgData;\r\n  }\r\n\r\n  private saveAsSvg(svgNode): string {\r\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\r\n    const serializer = new XMLSerializer();\r\n    let svgString = serializer.serializeToString(svgNode);\r\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\r\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\r\n    return svgString;\r\n  }\r\n\r\n  private download(url: string, name: string): any {\r\n    var file = this.b64toBlob(url);\r\n    this.save.emit(file);\r\n\r\n    return file;\r\n  }\r\n\r\n  /**\r\n   * convertir base64 a blob\r\n   * @param b64DataUrl \r\n   * @param contentType \r\n   * @param sliceSize \r\n   */\r\n  b64toBlob = (b64DataUrl, sliceSize=512) => {\r\n    var arr = b64DataUrl.split(\",\");\r\n    var contentType = arr[0].match(/:(.*?);/)[1]\r\n    const byteCharacters = atob(arr[1]);\r\n    const byteArrays = [];\r\n  \r\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n  \r\n      const byteNumbers = new Array(slice.length);\r\n      for (let i = 0; i < slice.length; i++) {\r\n        byteNumbers[i] = slice.charCodeAt(i);\r\n      }\r\n  \r\n      const byteArray = new Uint8Array(byteNumbers);\r\n      byteArrays.push(byteArray);\r\n    }\r\n  \r\n    const blob = new Blob(byteArrays, {type: contentType});\r\n    return blob;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgWhiteboardComponent } from './ng-whiteboard.component';\r\n\r\n@NgModule({\r\n  declarations: [NgWhiteboardComponent],\r\n  imports: [],\r\n  exports: [NgWhiteboardComponent]\r\n})\r\nexport class NgWhiteboardModule {}\r\n"],"names":[],"mappings":"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"}