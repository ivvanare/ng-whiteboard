{"version":3,"file":"ng-whiteboard.js","sources":["ng://ng-whiteboard/lib/ng-whiteboard.service.ts","ng://ng-whiteboard/lib/ng-whiteboard.types.ts","ng://ng-whiteboard/lib/ng-whiteboard.component.ts","ng://ng-whiteboard/lib/ng-whiteboard.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgWhiteboardService {\n  // Observable string sources\n  private eraseSvgMethodCallSource = new Subject<any>();\n  private saveSvgMethodCallSource = new Subject<{ name: string; format: 'png' | 'jpeg' | 'svg' }>();\n  private undoSvgMethodCallSource = new Subject<any>();\n  private redoSvgMethodCallSource = new Subject<any>();\n  private addImageMethodCallSource = new Subject<string | ArrayBuffer>();\n\n  // Observable string streams\n  eraseSvgMethodCalled$ = this.eraseSvgMethodCallSource.asObservable();\n  saveSvgMethodCalled$ = this.saveSvgMethodCallSource.asObservable();\n  undoSvgMethodCalled$ = this.undoSvgMethodCallSource.asObservable();\n  redoSvgMethodCalled$ = this.redoSvgMethodCallSource.asObservable();\n  addImageMethodCalled$ = this.addImageMethodCallSource.asObservable();\n\n  // Service message commands\n  public erase(): void {\n    this.eraseSvgMethodCallSource.next();\n  }\n  public save(name: string = 'New image', format: 'png' | 'jpeg' | 'svg' = 'png'): void {\n    this.saveSvgMethodCallSource.next({ name, format });\n  }\n  public undo(): void {\n    this.undoSvgMethodCallSource.next();\n  }\n  public redo(): void {\n    this.redoSvgMethodCallSource.next();\n  }\n  public addImage(image: string | ArrayBuffer): void {\n    this.addImageMethodCallSource.next(image);\n  }\n}\n","export class WhiteboardOptions {\n  color = '#000000';\n  backgroundColor = '#ffffff';\n  size = '5px';\n  linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs' = 'round';\n  linecap: 'butt' | 'square' | 'round' = 'round';\n}\n\nexport interface ActionStack {\n  type: ActionType;\n  line?: SVGPathElement;\n  image?: SVGGElement;\n}\n\nexport enum ActionType {\n  Line,\n  Image\n}\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { NgWhiteboardService } from './ng-whiteboard.service';\nimport { Subscription } from 'rxjs';\nimport { WhiteboardOptions, ActionStack, ActionType } from './ng-whiteboard.types';\nimport { ContainerElement, curveBasis, select, drag, Selection, line, event, mouse } from 'd3';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ng-whiteboard-btc',\n  template: `\n    <svg #svgContainer [style.background-color]=\"this.backgroundColor || this.whiteboardOptions.backgroundColor\"></svg>\n  `,\n  styleUrls: ['ng-whiteboard.component.scss'],\n})\nexport class NgWhiteboardComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('svgContainer', { static: false }) private svgContainer: ElementRef<ContainerElement>;\n  @Input() whiteboardOptions: WhiteboardOptions = new WhiteboardOptions();\n  @Input() color: string;\n  @Input() backgroundColor: string;\n  @Input() size: string;\n  @Input() linejoin: 'miter' | 'round' | 'bevel' | 'miter-clip' | 'arcs';\n  @Input() linecap: 'butt' | 'square' | 'round';\n\n  @Output() init = new EventEmitter();\n  @Output() clear = new EventEmitter();\n  @Output() undo = new EventEmitter();\n  @Output() redo = new EventEmitter();\n  @Output() save: EventEmitter<any> = new EventEmitter<string | Blob | File>();\n  @Output() imageAdded = new EventEmitter();\n\n  private selection: Selection<any, unknown, null, undefined> = undefined;\n\n  private subscriptionList: Subscription[] = [];\n\n  private undoStack: ActionStack[] = [];\n  private redoStack: ActionStack[] = [];\n\n  constructor(private whiteboardService: NgWhiteboardService) {}\n\n  ngAfterViewInit() {\n    this.subscriptionList.push(\n      this.whiteboardService.eraseSvgMethodCalled$.subscribe(() => this.eraseSvg(this.selection))\n    );\n\n    this.subscriptionList.push(\n      this.whiteboardService.saveSvgMethodCalled$.subscribe(({ name, format }) => this.saveSvg(name, format))\n    );\n    this.subscriptionList.push(this.whiteboardService.undoSvgMethodCalled$.subscribe(() => this.undoDraw()));\n    this.subscriptionList.push(this.whiteboardService.redoSvgMethodCalled$.subscribe(() => this.redoDraw()));\n    this.subscriptionList.push(this.whiteboardService.addImageMethodCalled$.subscribe((image) => this.addImage(image)));\n\n    this.selection = this.initSvg(this.svgContainer.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptionList.forEach((subscription) => this._unsubscribe(subscription));\n  }\n\n  private initSvg(selector: ContainerElement) {\n    const d3Line = line().curve(curveBasis);\n    const svg = select(selector).call(\n      drag()\n        .container(selector)\n        .subject(() => {\n          const p = [event.x, event.y];\n          return [p, p];\n        })\n        .on('start', () => {\n          const d = event.subject;\n          const active = svg\n            .append('path')\n            .datum(d)\n            .attr('class', 'line')\n            .attr(\n              'style',\n              `\n           fill: none;\n           stroke: ${this.color || this.whiteboardOptions.color};\n           stroke-width: ${this.size || this.whiteboardOptions.size};\n           stroke-linejoin: ${this.linejoin || this.whiteboardOptions.linejoin};\n           stroke-linecap: ${this.linecap || this.whiteboardOptions.linecap};\n           `\n            );\n          active.attr('d', d3Line);\n          event.on('drag', function () {\n            active.datum().push(mouse(this));\n            active.attr('d', d3Line);\n          });\n          event.on('end', () => {\n            active.attr('d', d3Line);\n            if (this.undoStack.length < 1) {\n              this.redoStack = [];\n            }\n            this.undoStack.push({ type: ActionType.Line, line: active.node() });\n          });\n        })\n    );\n    this.init.emit();\n    return svg;\n  }\n\n  private addImage(image: string | ArrayBuffer) {\n    this.drawImage(image);\n  }\n\n  private eraseSvg(svg: Selection<any, unknown, null, undefined>) {\n    svg.selectAll('*').remove();\n    this.undoStack = [];\n    this.redoStack = [];\n    this.clear.emit();\n  }\n\n  private saveSvg(name, format: 'png' | 'jpeg' | 'svg') {\n    const svgString = this.saveAsSvg(this.selection.clone(true).node());\n    if (format === 'svg') {\n      this.download('data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString))), name);\n    } else {\n      this.svgString2Image(\n        svgString,\n        Number(this.selection.style('width').replace('px', '')),\n        Number(this.selection.style('height').replace('px', '')),\n        format,\n        (img) => {\n          this.download(img, name);\n        }\n      );\n    }\n\n    // this.save.emit();\n  }\n\n  private undoDraw() {\n    if (!this.undoStack.length) {\n      return;\n    }\n    this.redoStack.push(this.undoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.undo.emit();\n  }\n\n  private redoDraw() {\n    if (!this.redoStack.length) {\n      return;\n    }\n    this.undoStack.push(this.redoStack.pop());\n    this.selection.selectAll('.line').remove();\n    this.undoStack.forEach((action) => {\n      if (action.type === ActionType.Line) {\n        this.drawLine(action.line);\n      } else if (action.type === ActionType.Image) {\n        this.drawLine(action.image);\n      }\n    });\n    this.redo.emit();\n  }\n\n  private drawLine(pathNode: SVGPathElement | SVGGElement) {\n    this.selection.node().appendChild(pathNode);\n  }\n\n  private drawImage(image: string | ArrayBuffer) {\n    const group = this.selection\n      .append('g')\n      .data([{ x: 20, y: 20, r: 1, scale: 1 }])\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('transform', 'translate(0,0)');\n\n    const tempImg = new Image();\n    tempImg.onload = () => {\n      const aspectRatio = tempImg.width / tempImg.height;\n      const height = Number(this.selection.style('height').replace('px', ''));\n      // tempImg.height > Number(this.selection.style('height').replace('px', ''))\n      //   ? Number(this.selection.style('height').replace('px', '')) - 40\n      //   : tempImg.height;\n      const width = Number(this.selection.style('width').replace('px', ''));\n      // height === Number(this.selection.style('height').replace('px', '')) - 40\n      //   ? (Number(this.selection.style('height').replace('px', '')) - 40) * aspectRatio\n      //   : tempImg.width;\n      group\n        .append('image')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', height)\n        .attr('width', width)\n        .attr('preserveAspectRatio', 'none')\n        .attr('xlink:href', image.toString());\n\n      group\n        .append('rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 20)\n        .attr('height', 20)\n        .style('opacity', 0)\n        .attr('fill', (d) => {\n          return '#cccccc';\n        })\n        .call(\n          drag()\n            .subject(() => {\n              const p = [event.x, event.y];\n              return [p, p];\n            })\n            .on('start', () => {\n              event.on('drag', function (d) {\n                const cursor = select(this);\n                const cord = mouse(this);\n\n                d.x += cord[0] - Number(cursor.attr('width')) / 2;\n                d.y += cord[1] - Number(cursor.attr('height')) / 2;\n                select(this.parentNode).attr('transform', () => {\n                  return (\n                    'translate(' + [d.x, d.y] + '),rotate(' + 0 + ',160, 160),scale(' + d.scale + ',' + d.scale + ')'\n                  );\n                });\n              });\n            })\n        );\n      group\n        .on('mouseover', function () {\n          select(this).select('rect').style('opacity', 1.0);\n        })\n        .on('mouseout', function () {\n          select(this).select('rect').style('opacity', 0);\n        });\n      // this.undoStack.push({ type: ActionType.Image, image: group.node() });\n    };\n    tempImg.src = image.toString();\n  }\n\n  private _unsubscribe(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private svgString2Image(\n    svgString: string,\n    width: number,\n    height: number,\n    format: string,\n    callback: (img: string) => void\n  ) {\n    // set default for format parameter\n    format = format || 'png';\n    // SVG data URL from SVG string\n    const svgData = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\n    // create canvas in memory(not in DOM)\n    const canvas = document.createElement('canvas');\n    // get canvas context for drawing on canvas\n    const context = canvas.getContext('2d');\n    // set canvas size\n    canvas.width = width;\n    canvas.height = height;\n    // create image in memory(not in DOM)\n    const image = new Image();\n    // later when image loads run this\n    image.onload = () => {\n      // async (happens later)\n      // clear canvas\n      context.clearRect(0, 0, width, height);\n      // draw image with SVG data to canvas\n      context.drawImage(image, 0, 0, width, height);\n      // snapshot canvas as png\n      const pngData = canvas.toDataURL('image/' + format);\n      // pass png data URL to callback\n      callback(pngData);\n    }; // end async\n    // start loading SVG data into in memory image\n    image.src = svgData;\n  }\n\n  private saveAsSvg(svgNode): string {\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n    const serializer = new XMLSerializer();\n    let svgString = serializer.serializeToString(svgNode);\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\n    return svgString;\n  }\n\n  private download(url: string, name: string): File {\n    var file = this.dataURLtoFile(url, name);\n\n    this.save.emit(file);\n\n    return file;\n    // const link = document.createElement('a');\n    // link.href = url;\n    // link.setAttribute('visibility', 'hidden');\n    // link.download = name || 'new white-board';\n    // document.body.appendChild(link);\n    // link.click();\n  }\n\n  /**\n   * transformar base64\n   * @param dataurl string base64\n   * @param filename nombre para el File\n   */\n  dataURLtoFile(dataurl, filename) {\n    var arr = dataurl.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, { type: mime });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgWhiteboardComponent } from './ng-whiteboard.component';\n\n@NgModule({\n  declarations: [NgWhiteboardComponent],\n  imports: [],\n  exports: [NgWhiteboardComponent]\n})\nexport class NgWhiteboardModule {}\n"],"names":[],"mappings":"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"}